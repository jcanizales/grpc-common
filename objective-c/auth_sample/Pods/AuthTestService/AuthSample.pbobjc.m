// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth_sample.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "AuthSample.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - AUTHAuthSampleRoot

@implementation AUTHAuthSampleRoot

@end

static GPBFileDescriptor *AUTHAuthSampleRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"grpc.testing"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - AUTHRequest

@implementation AUTHRequest

@dynamic fillUsername;
@dynamic fillOauthScope;

typedef struct AUTHRequest_Storage {
  uint32_t _has_storage_[1];
  BOOL fillUsername;
  BOOL fillOauthScope;
} AUTHRequest_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fillUsername",
        .number = AUTHRequest_FieldNumber_FillUsername,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(AUTHRequest_Storage, fillUsername),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fillOauthScope",
        .number = AUTHRequest_FieldNumber_FillOauthScope,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(AUTHRequest_Storage, fillOauthScope),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[AUTHRequest class]
                                              rootClass:[AUTHAuthSampleRoot class]
                                                   file:AUTHAuthSampleRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(AUTHRequest_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - AUTHResponse

@implementation AUTHResponse

@dynamic username;
@dynamic oauthScope;

typedef struct AUTHResponse_Storage {
  uint32_t _has_storage_[1];
  NSString *username;
  NSString *oauthScope;
} AUTHResponse_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "username",
        .number = AUTHResponse_FieldNumber_Username,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(AUTHResponse_Storage, username),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "oauthScope",
        .number = AUTHResponse_FieldNumber_OauthScope,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(AUTHResponse_Storage, oauthScope),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[AUTHResponse class]
                                              rootClass:[AUTHAuthSampleRoot class]
                                                   file:AUTHAuthSampleRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(AUTHResponse_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
